worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain application/json application/javascript text/css text/xml application/xml+rss;

    # Upstream for OpenAI API
    upstream openai_api {
        server api.openai.com:443;
        keepalive 32;
    }

    # Upstream for https://api.anthropic.com
    upstream api_anthropic_com_upstream {
        server api.anthropic.com:443;
        keepalive 32;
    }

    # Upstream for https://api.openai.com
    upstream api_openai_com_upstream {
        server api.openai.com:443;
        keepalive 32;
    }

    # Upstream for https://cf.gpt.ge/v1
    upstream cf_gpt_ge_upstream {
        server cf.gpt.ge:443;
        keepalive 32;
    }

    # HTTP server (redirects to HTTPS when SSL is enabled)
    server {
        listen 80;
        server_name localhost;
        
        # OpenAI API proxy
        location /openai/ {
            # Remove /openai prefix and pass to upstream
            rewrite ^/openai/(.*) /$1 break;
            
            proxy_pass https://openai_api;
            proxy_ssl_server_name on;
            proxy_ssl_name api.openai.com;
            
            # Headers for proper proxying
            proxy_set_header Host api.openai.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings for streaming
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTPS server (uncomment and configure when you have SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     # SSL configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:MozTLS:10m;
    #     ssl_session_tickets off;
    #     
    #     # Modern SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # OpenAI API proxy (same as HTTP)
    #     location /openai/ {
    #         rewrite ^/openai/(.*) /$1 break;
    #         
    #         proxy_pass https://openai_api;
    #         proxy_ssl_server_name on;
    #         proxy_ssl_name api.openai.com;
    #         
    #         proxy_set_header Host api.openai.com;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         # WebSocket support
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection $connection_upgrade;
    #         
    #         proxy_connect_timeout 60s;
    #         proxy_send_timeout 60s;
    #         proxy_read_timeout 60s;
    #         
    #         proxy_buffering off;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    #     
    #     location /health {
    #         access_log off;
    #         return 200 "healthy\n";
    #         add_header Content-Type text/plain;
    #     }
    # }

    # WebSocket connection upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
}